version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - FRONTEND_DOMAIN
      - API_DOMAIN
    volumes:
      - /etc/letsencrypt:/etc/nginx/certs:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - app_network

  mysql:
    image: mysql:5.7
    container_name: mysql-prod
    expose:
      - "3306"
    env_file:
      - .env.prod
    environment:
      - DB_USER
      - DB_PASSWORD
      - DB_NAME
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-prod
    expose:
      - "5193"
    env_file:
      - .env.prod
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-prod
    expose:
      - "3123"
    env_file:
      - .env.prod
    restart: unless-stopped
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data: