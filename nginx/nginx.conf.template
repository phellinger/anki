# Add at the top of the file
error_log /var/log/nginx/error.log debug;
access_log /var/log/nginx/access.log;

server {
    listen 80;
    server_name "${FRONTEND_DOMAIN}" "${API_DOMAIN}";
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name "${FRONTEND_DOMAIN}";

    ssl_certificate /etc/nginx/certs/live/${FRONTEND_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/live/${FRONTEND_DOMAIN}/privkey.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    location / {
        proxy_pass http://frontend:3123;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Add error logging
        proxy_intercept_errors on;
        error_log /var/log/nginx/frontend_error.log debug;
    }
}

server {
    listen 443 ssl;
    server_name "${API_DOMAIN}";

    ssl_certificate /etc/nginx/certs/live/${API_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/live/${API_DOMAIN}/privkey.pem;

    location / {
        proxy_pass http://backend:5193;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Add error logging
        proxy_intercept_errors on;
        error_log /var/log/nginx/backend_error.log debug;
    }
} 