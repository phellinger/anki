version: '3.8'

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    platform: linux/x86_64
    ports:
      - "3351:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: mysqladmin ping -h localhost -u root -p${MYSQL_ROOT_PASSWORD}
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      target: development
    container_name: backend
    ports:
      - "5193:5193"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - .env.dev
    restart: unless-stopped
    networks:
      - app_network
    healthcheck:
      test: wget --spider -q http://localhost:5193/health
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  frontend:
    build: 
      context: ./frontend
      target: development
    container_name: frontend
    ports:
      - "3123:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_PORT=3123
    command: npm start
    depends_on:
      - backend
    networks:
      - app_network
    healthcheck:
      test: wget --spider -q http://localhost:3123
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data: